asyncapi: 3.0.0
info:
  title: SSE Demo Event API
  version: 1.0.0
  description: |
    Event-driven API for managing issues, tasks, planning, and comments using Server-Sent Events.
    This API follows CloudEvents specification with a consistent item-based event model.
  contact:
    name: VNG Realisatie
    url: https://github.com/vng-realisatie/sse-demo

servers:
  development:
    host: localhost:8000
    protocol: http
    description: Local development server

channels:
  events:
    address: /events
    description: Server-Sent Events stream for real-time updates
    messages:
      ItemCreated:
        $ref: "#/components/messages/ItemCreated"
      ItemUpdated:
        $ref: "#/components/messages/ItemUpdated"
      ItemDeleted:
        $ref: "#/components/messages/ItemDeleted"

  webhook:
    address: /events
    description: HTTP endpoint for publishing events
    messages:
      ItemCreated:
        $ref: "#/components/messages/ItemCreated"
      ItemUpdated:
        $ref: "#/components/messages/ItemUpdated"
      ItemDeleted:
        $ref: "#/components/messages/ItemDeleted"

operations:
  publishEvent:
    action: send
    channel:
      $ref: "#/channels/webhook"
    description: Publish an event via HTTP POST
    messages:
      - $ref: "#/channels/webhook/messages/ItemCreated"
      - $ref: "#/channels/webhook/messages/ItemUpdated"
      - $ref: "#/channels/webhook/messages/ItemDeleted"

  receiveEvents:
    action: receive
    channel:
      $ref: "#/channels/events"
    description: Receive real-time events via Server-Sent Events
    messages:
      - $ref: "#/channels/events/messages/ItemCreated"
      - $ref: "#/channels/events/messages/ItemUpdated"
      - $ref: "#/channels/events/messages/ItemDeleted"

components:
  messages:
    ItemCreated:
      name: ItemCreated
      title: Item Created
      summary: A new item (issue, task, comment, or planning) has been created
      contentType: application/json
      payload:
        $ref: "#/components/schemas/CloudEvent"
      examples:
        - name: Issue Created
          payload:
            specversion: "1.0"
            id: "01997ff0-db63-7061-a42f-36a32b2c3ca2"
            source: "frontend-create"
            subject: "issue-123"
            type: "item.created"
            time: "2025-01-15T10:30:00Z"
            datacontenttype: "application/json"
            data:
              item_type: "issue"
              item_id: "issue-123"
              item_data:
                id: "issue-123"
                title: "Parkeervergunning aanvraag"
                description: "Burger wil parkeervergunning voor nieuwe auto"
                status: "open"
                assignee: "alice@gemeente.nl"
                created_at: "2025-01-15T10:30:00Z"
        - name: Task Created
          payload:
            specversion: "1.0"
            id: "01997ff0-db63-7061-a42f-36a32b2c3ca3"
            source: "server-demo-event"
            subject: "issue-123"
            type: "item.created"
            time: "2025-01-15T10:35:00Z"
            datacontenttype: "application/json"
            data:
              item_type: "task"
              item_id: "task-456"
              item_data:
                cta: "Controleer documenten"
                description: "Controleer of alle benodigde documenten zijn ingediend"
                url: "https://example.com/tasks/456"
                completed: false
                deadline: "2025-01-20T17:00:00Z"
                actor: "system@gemeente.nl"

    ItemUpdated:
      name: ItemUpdated
      title: Item Updated
      summary: An existing item has been modified
      contentType: application/json
      payload:
        $ref: "#/components/schemas/CloudEvent"
      examples:
        - name: Issue Updated
          payload:
            specversion: "1.0"
            id: "01997ff0-db63-7061-a42f-36a32b2c3ca4"
            source: "server-demo-event"
            subject: "issue-123"
            type: "item.updated"
            time: "2025-01-15T10:45:00Z"
            datacontenttype: "application/merge-patch+json"
            data:
              item_type: "issue"
              item_id: "issue-123"
              item_data:
                status: "in_progress"
                assignee: "bob@gemeente.nl"
        - name: Task Completed
          payload:
            specversion: "1.0"
            id: "01997ff0-db63-7061-a42f-36a32b2c3ca5"
            source: "frontend-user-action"
            subject: "issue-123"
            type: "item.updated"
            time: "2025-01-15T11:00:00Z"
            datacontenttype: "application/merge-patch+json"
            data:
              item_type: "task"
              item_id: "task-456"
              patch:
                completed: true
                completed_at: "2025-01-15T11:00:00Z"

    ItemDeleted:
      name: ItemDeleted
      title: Item Deleted
      summary: An item has been deleted
      contentType: application/json
      payload:
        $ref: "#/components/schemas/CloudEvent"
      examples:
        - name: Issue Deleted
          payload:
            specversion: "1.0"
            id: "01997ff0-db63-7061-a42f-36a32b2c3ca6"
            source: "frontend-demo-event"
            subject: "issue-123"
            type: "item.deleted"
            time: "2025-01-15T12:00:00Z"
            datacontenttype: "application/json"
            data:
              item_type: "issue"
              item_id: "issue-123"
              item_data:
                id: "issue-123"
                reason: "Verwijderd vanuit tijdlijn weergave"

  schemas:
    CloudEvent:
      type: object
      description: CloudEvent specification compliant event structure
      required:
        - specversion
        - id
        - source
        - type
      properties:
        specversion:
          type: string
          enum: ["1.0"]
          description: CloudEvents specification version
        id:
          type: string
          description: Unique identifier for the event
          format: uuid
        source:
          type: string
          description: Source of the event (e.g., "frontend-create", "server-demo-event")
        subject:
          type: string
          description: Subject of the event, typically the issue ID
        type:
          type: string
          enum:
            - "item.created"
            - "item.updated"
            - "item.deleted"

          description: Event type following consistent item-based model
        time:
          type: string
          format: date-time
          description: Timestamp when the event occurred
        datacontenttype:
          type: string
          enum:
            - "application/json"
            - "application/merge-patch+json"
          description: Content type of the data payload
        data:
          oneOf:
            - $ref: "#/components/schemas/ItemEventData"

    ItemEventData:
      type: object
      description: Data payload for item-related events
      required:
        - item_type
        - item_id
      properties:
        item_type:
          type: string
          enum:
            - "issue"
            - "comment"
            - "task"
            - "planning"
          description: Type of item being affected
        item_id:
          type: string
          description: Unique identifier for the item
        item_data:
          type: object
          description: Item-specific data (for create/update events)
        patch:
          type: object
          description: Patch data for updates (used for timeline item updates)

    Issue:
      type: object
      description: Issue/Zaak entity
      required:
        - id
        - title
        - status
      properties:
        id:
          type: string
          description: Unique issue identifier
        title:
          type: string
          description: Issue title
        description:
          type: string
          description: Issue description
        status:
          type: string
          enum:
            - "open"
            - "in_progress"
            - "closed"
          description: Current issue status
        assignee:
          type: string
          nullable: true
          format: email
          description: Email of assigned person
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        resolution:
          type: string
          description: Resolution reason (for closed issues)

    Task:
      type: object
      description: Task entity for actionable items
      required:
        - id
        - cta
        - description
        - completed
      properties:
        id:
          type: string
          description: Unique task identifier
        cta:
          type: string
          description: Call-to-action text for the task
        description:
          type: string
          description: Task description
        url:
          type: string
          format: uri
          description: URL for task completion
        completed:
          type: boolean
          description: Whether the task is completed
        deadline:
          type: string
          format: date-time
          description: Task deadline
        actor:
          type: string
          format: email
          description: Who created/assigned the task

    Comment:
      type: object
      description: Comment/reaction entity
      required:
        - id
        - content
      properties:
        id:
          type: string
          description: Unique comment identifier
        content:
          type: string
          description: Comment text content
        author:
          type: string
          format: email
          description: Comment author
        parent_id:
          type: string
          nullable: true
          description: Parent comment ID for threading
        mentions:
          type: array
          items:
            type: string
            format: email
          description: Mentioned users

    Planning:
      type: object
      description: Planning entity with multiple moments
      required:
        - id
        - title
        - moments
      properties:
        id:
          type: string
          description: Unique planning identifier
        title:
          type: string
          description: Planning title
        description:
          type: string
          description: Planning description
        moments:
          type: array
          items:
            $ref: "#/components/schemas/PlanningMoment"
          description: Planning moments/milestones

    PlanningMoment:
      type: object
      description: Individual planning moment/milestone
      required:
        - id
        - date
        - title
        - status
      properties:
        id:
          type: string
          description: Unique moment identifier
        date:
          type: string
          format: date
          description: Planned date
        title:
          type: string
          description: Moment title
        status:
          type: string
          enum:
            - "completed"
            - "current"
            - "planned"
          description: Current status of the moment
